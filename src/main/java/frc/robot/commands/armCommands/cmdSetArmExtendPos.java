// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Command.

package frc.robot.commands.armCommands;
import edu.wpi.first.wpilibj2.command.CommandBase;
import frc.robot.RobotContainer;

import java.util.function.DoubleSupplier;


public class cmdSetArmExtendPos extends CommandBase {

    
    private double targPos = 0;
    private double stagPos = 1.0;
    private double stagPower = 1.0;


    public cmdSetArmExtendPos(double targetPos) {
        targPos = targetPos;


        // m_subsystem = subsystem;
        // addRequirements(m_subsystem);    

    }
     //if fixedDist = false => stagPosition is suposed to recieve the percantage to be traversed in stag, in 0.xx format
     public cmdSetArmExtendPos(double targetPos, double stagPosition, double stagPow, boolean fixedDist) {
        targPos = targetPos;
        //if fixedDist = false => stagPosition is suposed to recieve the percantage to be traversed in stag, in 0.xx format
        if(fixedDist){
            //fixed distance is a specific distance from the target when to start stagging
            stagPos = stagPosition;
        }
        else{
            stagPos = -1;
        }
        stagPower = stagPow;
        // m_subsystem = subsystem;
        // addRequirements(m_subsystem);    

        
    }

    // Called when the command is initially scheduled.
    @Override
    public void initialize() {
        if(stagPos == -1){
            double pos = RobotContainer.getInstance().m_arm.getArmExtendPos();

            stagPos = (Math.abs(pos - targPos))*stagPos;
        }
        RobotContainer.getInstance().m_arm.setArmExtendTargPos(targPos,stagPos,stagPower);
    }

    // Called every time the scheduler runs while the command is scheduled.
    @Override
    public void execute() {
    }

    // Called once the command ends or is interrupted.
    @Override
    public void end(boolean interrupted) {
    }

    // Returns true when the command should end.
    @Override
    public boolean isFinished() {
        return true;
    }

    @Override
    public boolean runsWhenDisabled() {
        return false;

    }
}
